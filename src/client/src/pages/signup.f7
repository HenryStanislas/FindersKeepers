<template>

  <!-- Default view-page layout -->
  <div class="view">
    <div class="page" data-name="login-screen-page">
      <!-- page-content has additional login-screen content -->
      <div class="page-content login-screen-content">
        <div class="login-screen-title">FindersKeepers</div>
        <!-- Login form -->
        <form>
          <div class="list">
            <ul>
              <li class="item-content item-input">
                <div class="item-inner">
                  <div class="item-title item-label">Username</div>
                  <div class="item-input-wrap">
                    <input type="text" name="username" placeholder="Username" @change="${updateUsername}" />
                    <span class="input-clear-button"></span>
                  </div>
                </div>
              </li>
              <li class="item-content item-input">
                <div class="item-inner">
                  <div class="item-title item-label">Password</div>
                  <div class="item-input-wrap">
                    <input type="password" name="password" placeholder="Password" @change="${updatePassword}" />
                    <span class="input-clear-button"></span>
                  </div>
                </div>
              </li>
              <li class="item-content item-input">
                <div class="item-inner">
                  <div class="item-title item-label">Email</div>
                  <div class="item-input-wrap">
                    <input type="email" name="email" placeholder="Email" @change="${updateEmail}" />
                    <span class="input-clear-button"></span>
                  </div>
                </div>
              </li>
            </ul>
          </div>
          <div class="block-footer">
  <a href="#" class="item-link list-button login-button button-fill color-blue" @click="${goToLoginPage}">Login instead</a>

</div>
          <div class="list">
            <ul>
              <li>
                <a href="#" class="item-link list-button login-button button-fill color-blue" @click="${alertLoginData}">Sign In</a>
              </li>
            </ul>
          </div>
        </form>
      </div>
    </div>
  </div>

</template>

<script>
  export default (props, { $f7, $update }) => {
    // Login screen demo data
    let username = 'ae';
    let password = 'fa';
    let email = 'afe';

    const updateUsername = (e) => {
      username = e.target.value;
      $update();
    }
    const updatePassword = (e) => {
      password = e.target.value;
      $update();
    }
    const updateEmail = (e) => {
      email = e.target.value;
      $update();
    }

    const alertLoginData = () => {
      
       
const fetchData = () => {
  const data = { username, password, email };
  fetch('http://127.0.0.1:3000/signup', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(data)
  })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {
      console.log(data);
      if (data.message) {
        console.log("User created successfully!");
         $f7.dialog.alert("User created successfully!");
      } else if (data.error === "Username already exists") {
        $f7.dialog.alert("Username already exists");
        console.log("Username already exists");
      } else if (data.error === "Email already exists. Please log in instead") {
        $f7.dialog.alert("Email already exists. Please log in instead");
        console.log("Email already exists. Please log in instead");
      }
    })
    .catch(error => {
      console.error('There was a problem with the fetch operation:', error);
    });
}

fetchData();
      
    }

    const goToLoginPage = () => {
  app.view.main.router.navigate('/login/');
};

    return $render;
  }
</script>
